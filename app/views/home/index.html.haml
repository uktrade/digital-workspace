- content_for :body_classes do
  - 'home'

%header.homepage-top
  .homepage-top-inner
    .welcome-block
      .inner-block.floated-children
        = render partial: "widgets/people_search"
        = render partial: "widgets/profile_overview"
= render partial: "widgets/notification_bar"
- if flash[:notice]
  .zd-confirmation
    %span
      = flash[:notice]
%div{:id => 'homepage', :class => 'homepage-content'}
  %main#content.root-index
    .grid-row
      .column-full
        .hero-news
          .news-item
            - if @posts.present?
              - @posts[0..0].each_with_index do |p, i|
                .hero-news-copy
                  %h3.heading-medium
                    = link_to(p["title"]["rendered"].html_safe, link_news_top + p["slug"])
                  .hero-news-excerpt
                    %p
                      - if p["acf"].present?
                        = truncate_excerpt_hero(p["acf"]["excerpt"])

                    = read_more(link_news_top + p["slug"])
                    - comment_id = p["id"]
                    - get_comment_count = PageQueries.comment_count_query(comment_id)
                    - if get_comment_count.present?
                      - comment_count = get_comment_count.count
                      = precede ' - ' do
                        = comments(link_news_top + p["slug"], comment_count)

                .hero-news-image-container
                  - if image_exists?(p)
                    = large_image_tag(p)

    .grid-row.eh-container
      - if @posts.present?
        - @posts[1..6].each_with_index do |p, i|
          .column-third.eh-target
            .news-item
              .news-item-image
                - if image_exists?(p)
                  = large_image_tag(p)

              .news-item-text
                .post-meta
                  = get_date(p["date"])
                  = raw p["news_categories"].map { |cat| news_cats(cat["name"], cat["slug"]) }.join(", ")

              %h3.heading-medium
                - heading = truncate_home_news_title(p["title"]["rendered"].html_safe)
                = link_to(heading, link_news_top + p["slug"])

                .news-item-excerpt
                  %p
                    - if p["acf"].present?
                      = truncate_excerpt_home_news(p["acf"]["excerpt"])

    .grid-row
      .column-full.section-note
        %p
          = link_to("View all News", link_news_top)
    %hr{:id => 'news', :class => 'rule-large'}
    .grid-row
      .column-full
        %h2.heading-medium
          What's popular?
    .grid-row
      - if @popular_posts.present?
        - @popular_posts.each do |p|
          .column-third.popular-page-summary
            %span{:class => "image-holder"}
              %a{:title => p["title"]["rendered"], :class => "img", :href => p["slug"]}
                - if p['acf']['image']['alt'].present?
                  - (img_alt = p['acf']['image']['alt'].html_safe)
                - else
                  - (img_alt = p['title']['rendered'].html_safe)
                %img{:src => p['acf']['image']['sizes']['medium'], :alt => img_alt}
            .popular-page-text
              %h3.heading-medium
                = link_to(p["title"]["rendered"].html_safe, p["slug"])
    %hr{:id => 'popular', :class => 'rule-large'}

    - if @visualisations.present?
      .grid-row
        .column-half
          %h2.heading-medium
            How are we doing?
      .grid-row
        - @visualisations.each do |visualisation|
          - if !visualisation["link"].empty?
            - if !visualisation["link"]["url"].empty?
              - tooltip = visualisation["link"]["title"].present? ? visualisation["link"]["title"] : visualisation["text"]
              %a{'title' => tooltip, :href => visualisation["link"]["url"], :class => 'column-third graph-summary graph-summary-orange'}
                .stat{:style => "background-image: url(" + visualisation['image']['url'] + "); background-size: " + visualisation['image']['width'].to_s + "px " + visualisation['image']['height'].to_s + "px; webkit-background-size: " + visualisation['image']['width'].to_s + "px " + visualisation['image']['height'].to_s + "px;"}
                  / %span.stat-number
                  %p.stat-description
                    = visualisation["text"].html_safe
          - else
            %div{'aria-label' => visualisation["text"], :class => 'column-third graph-summary graph-summary-orange'}
              .stat{:style => "background-image: url(" + visualisation['image']['url'] + "); background-size: " + visualisation['image']['width'].to_s + "px " + visualisation['image']['height'].to_s + "px; webkit-background-size: " + visualisation['image']['width'].to_s + "px " + visualisation['image']['height'].to_s + "px;"}
                / %span.stat-number
                %p.stat-description
                  = visualisation["text"].html_safe
      %hr{:id => 'statistics', :class => 'rule-large'}

    .grid-row
      .column-full
        %h2.heading-medium
          How do I?
    .grid-row
      - if @howdois.present?
        - @howdois.in_groups(3, false) do |group|
          .column-third
            %ul.list-style-a.how-tos
              - group.each do |item|
                %li
                  = link_to(item["title"]["rendered"].html_safe, item["link"])

    .grid-row
      .column-full.section-note
        %p
          = link_to('View all How do I? guides', '/working-at-dit/archive/how-do-i/')

    %hr{:id => 'statistics', :class => 'rule-large'}

    .grid-row
      .column-full
        %h2.heading-medium
          Latest tweets
    .grid-row
      - TwitterApi.public_tweets.each do |tweet|
        .column-third.tweet
          .tweet-profile-image
            %img{:src => tweet.user.profile_image_url_https, :alt => tweet.user.screen_name}
          .tweet-body
            .tweet-meta
              %span.tweet-username
                = tweet.user.name
              %a{:href => 'https://www.twitter.com/' + tweet.user.screen_name }
                = '@' + tweet.user.screen_name
              %date.tweet-date
                = tweet.created_at.strftime('%b %d')
            %p.tweet-content
              = parsed_tweet tweet
= render partial: "widgets/zendesk_footer"
